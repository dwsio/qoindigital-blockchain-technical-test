/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Ballot, BallotInterface } from "../../contracts/Ballot";

const _abi = [
  {
    inputs: [
      {
        internalType: "string[]",
        name: "proposalNames",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "startTime_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime_",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "voters_",
        type: "address[]",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "createRandom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPeriode",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNames",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentTime",
        type: "uint256",
      },
    ],
    name: "getVoteCounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "voters_",
        type: "address[]",
      },
    ],
    name: "giveRightToVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "winningProposal_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "winningVoteCount_",
        type: "uint256",
      },
    ],
    name: "rewardRandomVoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
    ],
    name: "sendEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentTime",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "voterAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voters",
    outputs: [
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "voted",
        type: "bool",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vote",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "rewarded",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentTime",
        type: "uint256",
      },
    ],
    name: "winnerName",
    outputs: [
      {
        internalType: "string",
        name: "winnerName_",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260405162001e5238038062001e528339810160408190526200002691620004f6565b620000313362000142565b60018055818310620000965760405162461bcd60e51b815260206004820152602360248201527f5468652073746172742074696d65206973206f7665726c61707320656e642074604482015262696d6560e81b60648201526084015b60405180910390fd5b60005b8451811015620001225760046040518060400160405280878481518110620000c557620000c56200065f565b60209081029190910181015182526000918101829052835460018101855593825290208151919260020201908190620000ff908262000704565b5060208201518160010155505080806200011990620007d0565b91505062000099565b5060058390556006829055620001388162000192565b50505050620007f8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200019c6200039f565b60005b81518110156200039b5760026000838381518110620001c257620001c26200065f565b6020908102919091018101516001600160a01b031682528101919091526040016000206001015460ff16156200023b5760405162461bcd60e51b815260206004820152601760248201527f54686520766f74657220616c726561647920766f74656400000000000000000060448201526064016200008d565b600260008383815181106200025457620002546200065f565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600001546000146200028d57600080fd5b600160026000848481518110620002a857620002a86200065f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060000181905550600060026000848481518110620002f257620002f26200065f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060030160006101000a81548160ff02191690831515021790555060038282815181106200034b576200034b6200065f565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b03909216919091179055806200039281620007d0565b9150506200019f565b5050565b6000546001600160a01b03163314620003fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200008d565b565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156200043e576200043e620003fd565b604052919050565b60006001600160401b03821115620004625762000462620003fd565b5060051b60200190565b600082601f8301126200047e57600080fd5b8151602062000497620004918362000446565b62000413565b82815260059290921b84018101918181019086841115620004b757600080fd5b8286015b84811015620004eb5780516001600160a01b0381168114620004dd5760008081fd5b8352918301918301620004bb565b509695505050505050565b600080600080608085870312156200050d57600080fd5b84516001600160401b03808211156200052557600080fd5b818701915087601f8301126200053a57600080fd5b815160206200054d620004918362000446565b82815260059290921b8401810191818101908b8411156200056d57600080fd5b8286015b848110156200061a578051868111156200058a57600080fd5b8701603f81018e136200059c57600080fd5b8481015187811115620005b357620005b3620003fd565b620005c7601f8201601f1916870162000413565b8181528f6040838501011115620005de5760008081fd5b60005b82811015620005ff57838101604001518282018901528701620005e1565b50600091810187019190915284525091830191830162000571565b50809950505080890151965050506040870151935060608701519150808211156200064457600080fd5b5062000653878288016200046c565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200068a57607f821691505b602082108103620006ab57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620006ff57600081815260208120601f850160051c81016020861015620006da5750805b601f850160051c820191505b81811015620006fb57828155600101620006e6565b5050505b505050565b81516001600160401b03811115620007205762000720620003fd565b620007388162000731845462000675565b84620006b1565b602080601f831160018114620007705760008415620007575750858301515b600019600386901b1c1916600185901b178555620006fb565b600085815260208120601f198616915b82811015620007a15788860151825594840194600190910190840162000780565b5085821015620007c05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060018201620007f157634e487b7160e01b600052601160045260246000fd5b5060010190565b61164a80620008086000396000f3fe60806040526004361061010e5760003560e01c80638a241f4c116100a5578063a9b4b78011610074578063dd0e237311610059578063dd0e237314610387578063e09a0f9b146103a7578063f2fde38b146103c757600080fd5b8063a9b4b7801461033b578063b384abef1461036757600080fd5b80638a241f4c146102235780638da5cb5b146102505780639904773e14610282578063a3ec138d146102aa57600080fd5b80635c19a95c116100e15780635c19a95c146101ac5780636b5a051b146101cc578063715018a6146101ee578063858168291461020357600080fd5b8063013cf08b146101135780630aaf8b1a1461014a578063205758ba1461016c57806348c981e214610199575b600080fd5b34801561011f57600080fd5b5061013361012e3660046112fc565b6103e7565b60405161014192919061135b565b60405180910390f35b34801561015657600080fd5b5061016a61016536600461137d565b6104a3565b005b34801561017857600080fd5b5061018c6101873660046112fc565b6106bb565b604051610141919061139f565b61016a6101a73660046113ce565b6107cf565b3480156101b857600080fd5b5061016a6101c73660046113ce565b61085d565b3480156101d857600080fd5b506101e1610a7d565b60405161014191906113fb565b3480156101fa57600080fd5b5061016a610bc4565b34801561020f57600080fd5b5061016a61021e366004611473565b610bd8565b34801561022f57600080fd5b5061024361023e3660046112fc565b610dda565b6040516101419190611538565b34801561025c57600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610141565b34801561028e57600080fd5b5060055460065460408051928352602083019190915201610141565b3480156102b657600080fd5b506103036102c53660046113ce565b60026020819052600091825260409091208054600182015492820154600390920154909260ff808216936101009092046001600160a01b0316921685565b6040805195865293151560208601526001600160a01b039092169284019290925260608301919091521515608082015260a001610141565b34801561034757600080fd5b50336000908152600260205260409020545b604051908152602001610141565b34801561037357600080fd5b5061016a61038236600461137d565b610edf565b34801561039357600080fd5b5061026a6103a23660046112fc565b611099565b3480156103b357600080fd5b506103596103c23660046112fc565b6110c3565b3480156103d357600080fd5b5061016a6103e23660046113ce565b6110e2565b600481815481106103f757600080fd5b906000526020600020906002020160009150905080600001805461041a9061157c565b80601f01602080910402602001604051908101604052809291908181526020018280546104469061157c565b80156104935780601f1061046857610100808354040283529160200191610493565b820191906000526020600020905b81548152906001019060200180831161047657829003601f168201915b5050505050908060010154905082565b60006104b08260016115c6565b67ffffffffffffffff8111156104c8576104c861145d565b6040519080825280602002602001820160405280156104f1578160200160208202803683370190505b5090506000805b6003548110156105c25784600260006003848154811061051a5761051a6115d9565b60009182526020808320909101546001600160a01b03168352820192909252604001902060020154036105b0576003818154811061055a5761055a6115d9565b9060005260206000200160009054906101000a90046001600160a01b031683838151811061058a5761058a6115d9565b6001600160a01b0390921660209283029190910190910152816105ac816115ef565b9250505b806105ba816115ef565b9150506104f8565b5060006105cf83516110c3565b9050600260008483815181106105e7576105e76115d9565b6020908102919091018101516001600160a01b031682528101919091526040016000206003015460ff16156106635760405162461bcd60e51b815260206004820152601660248201527f566f74657220616c72656164792072657761726465640000000000000000000060448201526064015b60405180910390fd5b610685838281518110610678576106786115d9565b60200260200101516107cf565b6002600084838151811061069b5761069b6115d9565b6020908102919091018101516001600160a01b0316825201525050505050565b6060600654821161070e5760405162461bcd60e51b815260206004820152601760248201527f566f74696e67206861736e277420656e64656420796574000000000000000000604482015260640161065a565b600061071861116f565b90506004818154811061072d5761072d6115d9565b906000526020600020906002020160000180546107499061157c565b80601f01602080910402602001604051908101604052809291908181526020018280546107759061157c565b80156107c25780601f10610797576101008083540402835291602001916107c2565b820191906000526020600020905b8154815290600101906020018083116107a557829003601f168201915b5050505050915050919050565b6107d76111ec565b6040516000906001600160a01b03831690829067016345785d8a00009082818181858883f193505050509050806108505760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e64204574686572000000000000000000000000604482015260640161065a565b5061085a60018055565b50565b336000908152600260205260409020600181015460ff16156108c15760405162461bcd60e51b815260206004820152601160248201527f596f7520616c726561647920766f746564000000000000000000000000000000604482015260640161065a565b336001600160a01b038316036109195760405162461bcd60e51b815260206004820152601d60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f776564000000604482015260640161065a565b6001600160a01b03828116600090815260026020526040902060010154610100900416156109bb576001600160a01b039182166000908152600260205260409020600101546101009004909116903382036109b65760405162461bcd60e51b815260206004820152601860248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e0000000000000000604482015260640161065a565b610919565b600181810180547fffffffffffffffffffffff000000000000000000000000000000000000000000166101006001600160a01b03861690810291909117831790915560009081526002602052604090209081015460ff1615610a5e5781600001546004826002015481548110610a3357610a336115d9565b90600052602060002090600202016001016000828254610a5391906115c6565b90915550610a789050565b815481548290600090610a729084906115c6565b90915550505b505050565b60045460609060009067ffffffffffffffff811115610a9e57610a9e61145d565b604051908082528060200260200182016040528015610ad157816020015b6060815260200190600190039081610abc5790505b50905060005b600454811015610bbe5760048181548110610af457610af46115d9565b90600052602060002090600202016000018054610b109061157c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3c9061157c565b8015610b895780601f10610b5e57610100808354040283529160200191610b89565b820191906000526020600020905b815481529060010190602001808311610b6c57829003601f168201915b5050505050828281518110610ba057610ba06115d9565b60200260200101819052508080610bb6906115ef565b915050610ad7565b50919050565b610bcc611245565b610bd6600061129f565b565b610be0611245565b60005b8151811015610dd65760026000838381518110610c0257610c026115d9565b6020908102919091018101516001600160a01b031682528101919091526040016000206001015460ff1615610c795760405162461bcd60e51b815260206004820152601760248201527f54686520766f74657220616c726561647920766f746564000000000000000000604482015260640161065a565b60026000838381518110610c8f57610c8f6115d9565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060000154600014610cc757600080fd5b600160026000848481518110610cdf57610cdf6115d9565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060000181905550600060026000848481518110610d2657610d266115d9565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506003828281518110610d7c57610d7c6115d9565b602090810291909101810151825460018101845560009384529190922001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390921691909117905580610dce816115ef565b915050610be3565b5050565b60606006548211610e2d5760405162461bcd60e51b815260206004820152601760248201527f566f74696e67206861736e277420656e64656420796574000000000000000000604482015260640161065a565b60045460009067ffffffffffffffff811115610e4b57610e4b61145d565b604051908082528060200260200182016040528015610e74578160200160208202803683370190505b50905060005b600454811015610ed85760048181548110610e9757610e976115d9565b906000526020600020906002020160010154828281518110610ebb57610ebb6115d9565b602090810291909101015280610ed0816115ef565b915050610e7a565b5092915050565b610ee76111ec565b3360009081526002602052604090206005548211610f475760405162461bcd60e51b815260206004820152601960248201527f566f74696e67206861736e277420737461727465642079657400000000000000604482015260640161065a565b6006548210610f985760405162461bcd60e51b815260206004820152601060248201527f566f74696e672068617320656e64656400000000000000000000000000000000604482015260640161065a565b8054600003610fe95760405162461bcd60e51b815260206004820152601960248201527f596f752068617665206e6f20726967687420746f20766f746500000000000000604482015260640161065a565b600181015460ff161561103e5760405162461bcd60e51b815260206004820152601160248201527f596f7520616c726561647920766f746564000000000000000000000000000000604482015260640161065a565b6001818101805460ff19169091179055600281018390558054600480548590811061106b5761106b6115d9565b9060005260206000209060020201600101600082825461108b91906115c6565b909155505060018055505050565b600381815481106110a957600080fd5b6000918252602090912001546001600160a01b0316905081565b6000816110d1600143611608565b6110dc91904061161b565b92915050565b6110ea611245565b6001600160a01b0381166111665760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161065a565b61085a8161129f565b600080805b6004548110156111e7578160048281548110611192576111926115d9565b90600052602060002090600202016001015411156111d557600481815481106111bd576111bd6115d9565b90600052602060002090600202016001015491508092505b806111df816115ef565b915050611174565b505090565b60026001540361123e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161065a565b6002600155565b6000546001600160a01b03163314610bd65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161065a565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561130e57600080fd5b5035919050565b6000815180845260005b8181101561133b5760208185018101518683018201520161131f565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061136e6040830185611315565b90508260208301529392505050565b6000806040838503121561139057600080fd5b50508035926020909101359150565b6020815260006113b26020830184611315565b9392505050565b6001600160a01b038116811461085a57600080fd5b6000602082840312156113e057600080fd5b81356113b2816113b9565b80356113f6816113b9565b919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561145057603f1988860301845261143e858351611315565b94509285019290850190600101611422565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561148657600080fd5b823567ffffffffffffffff8082111561149e57600080fd5b818501915085601f8301126114b257600080fd5b8135818111156114c4576114c461145d565b8060051b604051601f19603f830116810181811085821117156114e9576114e961145d565b60405291825284820192508381018501918883111561150757600080fd5b938501935b8285101561152c5761151d856113eb565b8452938501939285019261150c565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561157057835183529284019291840191600101611554565b50909695505050505050565b600181811c9082168061159057607f821691505b602082108103610bbe57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156110dc576110dc6115b0565b634e487b7160e01b600052603260045260246000fd5b600060018201611601576116016115b0565b5060010190565b818103818111156110dc576110dc6115b0565b60008261163857634e487b7160e01b600052601260045260246000fd5b50069056fea164736f6c6343000811000a";

type BallotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ballot__factory extends ContractFactory {
  constructor(...args: BallotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    proposalNames: PromiseOrValue<string>[],
    startTime_: PromiseOrValue<BigNumberish>,
    endTime_: PromiseOrValue<BigNumberish>,
    voters_: PromiseOrValue<string>[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Ballot> {
    return super.deploy(
      proposalNames,
      startTime_,
      endTime_,
      voters_,
      overrides || {}
    ) as Promise<Ballot>;
  }
  override getDeployTransaction(
    proposalNames: PromiseOrValue<string>[],
    startTime_: PromiseOrValue<BigNumberish>,
    endTime_: PromiseOrValue<BigNumberish>,
    voters_: PromiseOrValue<string>[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      proposalNames,
      startTime_,
      endTime_,
      voters_,
      overrides || {}
    );
  }
  override attach(address: string): Ballot {
    return super.attach(address) as Ballot;
  }
  override connect(signer: Signer): Ballot__factory {
    return super.connect(signer) as Ballot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotInterface {
    return new utils.Interface(_abi) as BallotInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ballot {
    return new Contract(address, _abi, signerOrProvider) as Ballot;
  }
}
